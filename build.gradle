version "${version}"

buildscript {
    ext {
        kotlinVersion = '1.3.11'
        junitVersion = '5.3.2'
        javaxInjectVersion = '1'
        guiceVersion = '4.1.0'
        guavaVersion = '26.0-jre'
        governatorVersion = '1.17.5'
        kampGradlePluginsVersion = '1.0.0'
    }

    dependencies {
        repositories {
            mavenCentral()
            mavenLocal()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }

        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath(
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
                "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion",
                "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        )
        classpath "ch.leadrian.samp.kamp:kamp-gradle-plugins:$kampGradlePluginsVersion"
    }
}

apply plugin: 'java'

allprojects {
    group 'ch.leadrian.samp.kamp'

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ['-Xjvm-default=compatibility']
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ['-Xjvm-default=compatibility']
        }
    }

    dependencies {
        implementation(
                "com.netflix.governator:governator:$governatorVersion"
        )

        api(
                "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
                "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
                'org.slf4j:slf4j-api:1.7.25',
                "com.google.inject:guice:$guiceVersion",
                "javax.inject:javax.inject:$javaxInjectVersion",
                "com.google.guava:guava:$guavaVersion"
        )

        testImplementation(
                "org.junit.jupiter:junit-jupiter-api:$junitVersion",
                "org.junit.jupiter:junit-jupiter-params:$junitVersion",
                'io.mockk:mockk:1.8.6',
                'org.assertj:assertj-core:3.10.0'
        )

        testRuntimeOnly(
                "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        )
    }

    test {
        useJUnitPlatform()
    }

    test.finalizedBy jacocoTestReport

    jacoco {
        toolVersion = "0.8.1"
    }
}
