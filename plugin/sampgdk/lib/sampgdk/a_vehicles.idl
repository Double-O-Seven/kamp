/* Copyright (C) 2011-2015 Zeex
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const int CARMODTYPE_SPOILER      = 0;
const int CARMODTYPE_HOOD         = 1;
const int CARMODTYPE_ROOF         = 2;
const int CARMODTYPE_SIDESKIRT    = 3;
const int CARMODTYPE_LAMPS        = 4;
const int CARMODTYPE_NITRO        = 5;
const int CARMODTYPE_EXHAUST      = 6;
const int CARMODTYPE_WHEELS       = 7;
const int CARMODTYPE_STEREO       = 8;
const int CARMODTYPE_HYDRAULICS   = 9;
const int CARMODTYPE_FRONT_BUMPER = 10;
const int CARMODTYPE_REAR_BUMPER  = 11;
const int CARMODTYPE_VENT_RIGHT   = 12;
const int CARMODTYPE_VENT_LEFT    = 13;

const int VEHICLE_PARAMS_UNSET = -1;
const int VEHICLE_PARAMS_OFF   =  0;
const int VEHICLE_PARAMS_ON    =  1;

[native] bool IsValidVehicle(int vehicleid);
[native] float GetVehicleDistanceFromPoint(int vehicleid, float x, float y, float z);
[native] int CreateVehicle(int vehicletype, float x, float y, float z, float rotation, int color1, int color2, int respawn_delay, bool addsiren = false);
[native] bool DestroyVehicle(int vehicleid);
[native] bool IsVehicleStreamedIn(int vehicleid, int forplayerid);
[native] bool GetVehiclePos(int vehicleid, [out] float x, [out] float y, [out] float z);
[native] bool SetVehiclePos(int vehicleid, float x, float y, float z);
[native] bool GetVehicleZAngle(int vehicleid, [out] float z_angle);
[native] bool GetVehicleRotationQuat(int vehicleid, [out] float w, [out] float x, [out] float y, [out] float z);
[native] bool SetVehicleZAngle(int vehicleid, float z_angle);
[native] bool SetVehicleParamsForPlayer(int vehicleid, int playerid, int objective, int doorslocked);
[native] bool ManualVehicleEngineAndLights();
[native] bool SetVehicleParamsEx(int vehicleid, int engine, int lights, int alarm, int doors, int bonnet, int boot, int objective);
[native] bool GetVehicleParamsEx(int vehicleid, [out] int engine, [out] int lights, [out] int alarm, [out] int doors, [out] int bonnet, [out] int boot, [out] int objective);
[native] int GetVehicleParamsSirenState(int vehicleid);
[native] bool SetVehicleParamsCarDoors(int vehicleid, int driver, int passenger, int backleft, int backright);
[native] bool GetVehicleParamsCarDoors(int vehicleid, [out] int driver, [out] int passenger, [out] int backleft, [out] int backright);
[native] bool SetVehicleParamsCarWindows(int vehicleid, int driver, int passenger, int backleft, int backright);
[native] bool GetVehicleParamsCarWindows(int vehicleid, [out] int driver, [out] int passenger, [out] int backleft, [out] int backright);
[native] bool SetVehicleToRespawn(int vehicleid);
[native] bool LinkVehicleToInterior(int vehicleid, int interiorid);
[native] bool AddVehicleComponent(int vehicleid, int componentid);
[native] bool RemoveVehicleComponent(int vehicleid, int componentid);
[native] bool ChangeVehicleColor(int vehicleid, int color1, int color2);
[native] bool ChangeVehiclePaintjob(int vehicleid, int paintjobid);
[native] bool SetVehicleHealth(int vehicleid, float health);
[native] bool GetVehicleHealth(int vehicleid, [out] float health);
[native] bool AttachTrailerToVehicle(int trailerid, int vehicleid);
[native] bool DetachTrailerFromVehicle(int vehicleid);
[native] bool IsTrailerAttachedToVehicle(int vehicleid);
[native] int GetVehicleTrailer(int vehicleid);
[native] bool SetVehicleNumberPlate(int vehicleid, string numberplate);
[native] int GetVehicleModel(int vehicleid);
[native] int GetVehicleComponentInSlot(int vehicleid, int slot);
[native] int GetVehicleComponentType(int component);
[native] bool RepairVehicle(int vehicleid);
[native] bool GetVehicleVelocity(int vehicleid, [out] float X, [out] float Y, [out] float Z);
[native] bool SetVehicleVelocity(int vehicleid, float X, float Y, float Z);
[native] bool SetVehicleAngularVelocity(int vehicleid, float X, float Y, float Z);
[native] bool GetVehicleDamageStatus(int vehicleid, [out] int panels, [out] int doors, [out] int lights, [out] int tires);
[native] bool UpdateVehicleDamageStatus(int vehicleid, int panels, int doors, int lights, int tires);
[native] bool SetVehicleVirtualWorld(int vehicleid, int worldid);
[native] int GetVehicleVirtualWorld(int vehicleid);

const int VEHICLE_MODEL_INFO_SIZE           = 1;
const int VEHICLE_MODEL_INFO_FRONTSEAT      = 2;
const int VEHICLE_MODEL_INFO_REARSEAT       = 3;
const int VEHICLE_MODEL_INFO_PETROLCAP      = 4;
const int VEHICLE_MODEL_INFO_WHEELSFRONT    = 5;
const int VEHICLE_MODEL_INFO_WHEELSREAR     = 6;
const int VEHICLE_MODEL_INFO_WHEELSMID      = 7;
const int VEHICLE_MODEL_INFO_FRONT_BUMPER_Z = 8;
const int VEHICLE_MODEL_INFO_REAR_BUMPER_Z  = 9;

[native] bool GetVehicleModelInfo(int model, int infotype, [out] float X, [out] float Y, [out] float Z);
