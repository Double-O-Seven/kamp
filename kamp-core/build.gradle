buildscript {

    dependencies {
        repositories {
            mavenCentral()
            mavenLocal()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }

        classpath "ch.leadrian.samp.kamp:kamp-gradle-plugins:$kampGradlePluginsVersion"
    }
}

apply plugin: 'maven'
apply plugin: 'kamp-textkeygen'
apply plugin: 'kamp-java-codegen'
apply plugin: 'kamp-kotlin-codegen'

dependencies {

    compile(
            'org.slf4j:slf4j-api:1.7.25',
            'org.codehaus.plexus:plexus-utils:3.1.0',
            'org.apache.commons:commons-collections4:4.2',
            "com.google.inject:guice:$guiceVersion",
            "com.netflix.governator:governator:$governatorVersion"
    )

    testCompile(
            "com.google.inject:guice:$guiceVersion",
            "com.netflix.governator:governator:$governatorVersion"
    )

}

def generatedSrcJavaDir = "$buildDir/generated-src/main/java"
def generatedSrcKotlinDir = "$buildDir/generated-src/main/kotlin"

sourceSets {
    main {
        java {
            srcDir generatedSrcJavaDir
            srcDir generatedSrcKotlinDir
        }
    }
}

def corePackageName = "ch.leadrian.samp.kamp.core"
def runtimePackageName = "${corePackageName}.runtime"
def apiPackageName = "${corePackageName}.api"
def constantsPackageName = "${apiPackageName}.constants"

def idlFilesDir = "${project(':kamp-plugin').projectDir}/src/main/cpp/sampgdk/lib/sampgdk"

def actorIDLFile = "$idlFilesDir/a_actor.idl"
def objectsIDLFile = "$idlFilesDir/a_objects.idl"
def playersIDLFile = "$idlFilesDir/a_players.idl"
def sampIDLFile = "$idlFilesDir/a_samp.idl"
def vehiclesIDLFile = "$idlFilesDir/a_vehicles.idl"

kampJavaCodegen {
    constantsJavaPackageName = constantsPackageName
    runtimeJavaPackageName = runtimePackageName
    outputDirectoryPath = generatedSrcJavaDir
    interfaceDefinitionFiles actorIDLFile, objectsIDLFile, playersIDLFile, sampIDLFile, vehiclesIDLFile
}

kampKotlinCodegen {
    runtimeJavaPackageName = runtimePackageName
    outputDirectoryPath = generatedSrcKotlinDir
    interfaceDefinitionFiles actorIDLFile, objectsIDLFile, playersIDLFile, sampIDLFile, vehiclesIDLFile
}

textKeyGenerator {
    outputDirectory = generatedSrcJavaDir
    packageName corePackageName
    resourcesDirectory = projectDir.absolutePath + "/src/main/resources"
}
